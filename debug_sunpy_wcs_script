from astropy.io import fits
import sunpy.map
from astropy import units as u
import matplotlib.pyplot as plt

def hg_overlay(axes, color='white'):
    """
    Create a heliographic overlay using wcsaxes.
    Also draw a grid and label the top axes.
    Parameters
    ----------
    axes : `wcsaxes.WCSAxes` object.
        The `~wcsaxes.WCSAxes` object to create the HGS overlay on.
    color : color of the grid and ticks
    Returns
    -------
    overlay : wcsaxes overlay
        The overlay object.

    Adapted from:
    https://github.com/sunpy/sunpy/blob/e1d349a661711866ff52058c31a666377860ea16/sunpy/visualization/wcsaxes_compat.py

    """
    #overlay = axes.get_coords_overlay('heliographic_stonyhurst')
    overlay = axes.get_coords_overlay('heliographic_carrington')

    lon = overlay[0]
    lat = overlay[1]

    #lon.coord_wrap = 180
    lon.set_major_formatter('dd')

    lon.set_axislabel('Solar Longitude (Carrington)')
    lat.set_axislabel('Solar Latitude')

    lon.set_ticks(spacing=10. * u.deg, color=color)
    lat.set_ticks(spacing=10. * u.deg, color=color)

    overlay.grid(color=color, alpha=0.5)

    return overlay


url = '/Users/rattie/Data/SDO/HMI/Nov_28_2010_3hr/hmi.m_45s.20101127_000000_TAI.2.magnetogram.fits'
hdu = fits.open(url)
hdu.verify('silentfix')

smap = sunpy.map.Map(url).rotate(angle=hdu[1].header['CROTA2'] * u.deg)
# Define a region of interest
length = 250 * u.arcsec
x0 = -180 * u.arcsec
y0 = 210 * u.arcsec
# Define a region to highlight with a box
bottom_left = u.Quantity([x0 - length/2, y0 - length/2])
# Draw a box on the image
#smap.draw_rectangle(bottom_left, length, length)
# Extract submap from smap
submap = smap.submap(u.Quantity([x0 - length/2, x0 + length/2]),
                     u.Quantity([y0 - length/2, y0 + length/2]))

fig1 = plt.figure(1)
ax = fig1.add_axes([0.15, 0.1, 0.8, 0.8], projection=submap)
submap.plot(vmin=-100, vmax=100, title=False)
overlay_carr = hg_overlay(ax, 'yellow')
plt.show()

